
// Code generated by vite from client-bundle DO NOT EDIT.
package webui

var index = []byte(`<!DOCTYPE html>
<html>
  <head>
    <title>gomon console</title>
    <script src="/dist/main.js" type="module"></script>
    <link rel="stylesheet" href="/dist/main.css" />
    <style>
      @keyframes blink {
        0% {
          opacity: 0;
        }
      }
      .blinking-cursor::before {
        content: "";
        width: 5px;
        height: 20px;
        background: rgb(74, 222, 128);
        display: inline-block;
        animation: blink 1.5s steps(2) infinite;
      }
    </style>
  </head>
  <body class="bg-slate-900 text-white flex flex-col h-screen">
    <nav class="grow-0 flex flex-row p-4 justify-between items-center bg-blue-500">
      <div class="flex flex-row">
        <a href="https://github.com/jdudmesh/gomon" target="_blank" class="text-2xl text-bold">gomon</a>
      </div>
      <div class="flex flex-row gap-2">
        <form id="search-form" class="flex flex-row gap-2 text-slate-900">
          <input id="search-input" name="q" type="text" class="input input-sm input-bordered w-96" placeholder="Search..." />
          <select id="search-select" name="r" class="select select-sm select-bordered w-48"></select>
          <button type="submit" class="btn btn-sm btn-secondary">Search</button>
        </form>
        <button id="restart" class="btn btn-sm btn-primary">Restart</button>
      </div>
    </nav>
    <main id="log-output" class="m-4 font-mono overflow-y-scroll">
      <div id="log-output-inner"></div>
      <div class="blinking-cursor" />
    </main>
  </body>
</html>
`)

var script = []byte(`function Ve(e,t){const r=Object.create(null),n=e.split(",");for(let s=0;s<n.length;s++)r[n[s]]=!0;return t?s=>!!r[s.toLowerCase()]:s=>!!r[s]}const Ue=()=>{},ze=Object.prototype.hasOwnProperty,U=(e,t)=>ze.call(e,t),_=Array.isArray,W=e=>Se(e)==="[object Map]",M=e=>typeof e=="function",Be=e=>typeof e=="string",G=e=>typeof e=="symbol",N=e=>e!==null&&typeof e=="object",Ge=e=>(N(e)||M(e))&&M(e.then)&&M(e.catch),Ye=Object.prototype.toString,Se=e=>Ye.call(e),$e=e=>Se(e).slice(8,-1),re=e=>Be(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,O=(e,t)=>!Object.is(e,t);let Xe;function Je(e,t=Xe){t&&t.active&&t.effects.push(e)}const ve=e=>{const t=new Set(e);return t.w=0,t.n=0,t},Te=e=>(e.w&v)>0,ye=e=>(e.n&v)>0,xe=({deps:e})=>{if(e.length)for(let t=0;t<e.length;t++)e[t].w|=v},Qe=e=>{const{deps:t}=e;if(t.length){let r=0;for(let n=0;n<t.length;n++){const s=t[n];Te(s)&&!ye(s)?s.delete(e):t[r++]=s,s.w&=~v,s.n&=~v}t.length=r}},J=new WeakMap;let P=0,v=1;const x=30;let m;const y=Symbol(""),Q=Symbol("");class Ze{constructor(t,r=null,n){this.fn=t,this.scheduler=r,this.active=!0,this.deps=[],this.parent=void 0,Je(this,n)}run(){if(!this.active)return this.fn();let t=m,r=R;for(;t;){if(t===this)return;t=t.parent}try{return this.parent=m,m=this,R=!0,v=1<<++P,P<=x?xe(this):ue(this),this.fn()}finally{P<=x&&Qe(this),v=1<<--P,m=this.parent,R=r,this.parent=void 0,this.deferStop&&this.stop()}}stop(){m===this?this.deferStop=!0:this.active&&(ue(this),this.onStop&&this.onStop(),this.active=!1)}}function ue(e){const{deps:t}=e;if(t.length){for(let r=0;r<t.length;r++)t[r].delete(e);t.length=0}}let R=!0;const Re=[];function et(){Re.push(R),R=!1}function tt(){const e=Re.pop();R=e===void 0?!0:e}function p(e,t,r){if(R&&m){let n=J.get(e);n||J.set(e,n=new Map);let s=n.get(r);s||n.set(r,s=ve()),rt(s)}}function rt(e,t){let r=!1;P<=x?ye(e)||(e.n|=v,r=!Te(e)):r=!e.has(m),r&&(e.add(m),m.deps.push(e))}function S(e,t,r,n,s,o){const c=J.get(e);if(!c)return;let i=[];if(t==="clear")i=[...c.values()];else if(r==="length"&&_(e)){const a=Number(n);c.forEach((u,f)=>{(f==="length"||!G(f)&&f>=a)&&i.push(u)})}else switch(r!==void 0&&i.push(c.get(r)),t){case"add":_(e)?re(r)&&i.push(c.get("length")):(i.push(c.get(y)),W(e)&&i.push(c.get(Q)));break;case"delete":_(e)||(i.push(c.get(y)),W(e)&&i.push(c.get(Q)));break;case"set":W(e)&&i.push(c.get(y));break}if(i.length===1)i[0]&&fe(i[0]);else{const a=[];for(const u of i)u&&a.push(...u);fe(ve(a))}}function fe(e,t){const r=_(e)?e:[...e];for(const n of r)n.computed&&he(n);for(const n of r)n.computed||he(n)}function he(e,t){(e!==m||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}const nt=Ve("__proto__,__v_isRef,__isVue"),Ie=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(G)),de=st();function st(){const e={};return["includes","indexOf","lastIndexOf"].forEach(t=>{e[t]=function(...r){const n=l(this);for(let o=0,c=this.length;o<c;o++)p(n,"get",o+"");const s=n[t](...r);return s===-1||s===!1?n[t](...r.map(l)):s}}),["push","pop","shift","unshift","splice"].forEach(t=>{e[t]=function(...r){et();const n=l(this)[t].apply(this,r);return tt(),n}}),e}function ot(e){const t=l(this);return p(t,"has",e),t.hasOwnProperty(e)}class Me{constructor(t=!1,r=!1){this._isReadonly=t,this._shallow=r}get(t,r,n){const s=this._isReadonly,o=this._shallow;if(r==="__v_isReactive")return!s;if(r==="__v_isReadonly")return s;if(r==="__v_isShallow")return o;if(r==="__v_raw"&&n===(s?o?mt:Ne:o?bt:Ae).get(t))return t;const c=_(t);if(!s){if(c&&U(de,r))return Reflect.get(de,r,n);if(r==="hasOwnProperty")return ot}const i=Reflect.get(t,r,n);return(G(r)?Ie.has(r):nt(r))||(s||p(t,"get",r),o)?i:T(i)?c&&re(r)?i:i.value:N(i)?s?Pe(i):$(i):i}}class it extends Me{constructor(t=!1){super(!1,t)}set(t,r,n,s){let o=t[r];if(z(o)&&T(o)&&!T(n))return!1;if(!this._shallow&&(!qe(n)&&!z(n)&&(o=l(o),n=l(n)),!_(t)&&T(o)&&!T(n)))return o.value=n,!0;const c=_(t)&&re(r)?Number(r)<t.length:U(t,r),i=Reflect.set(t,r,n,s);return t===l(s)&&(c?O(n,o)&&S(t,"set",r,n):S(t,"add",r,n)),i}deleteProperty(t,r){const n=U(t,r);t[r];const s=Reflect.deleteProperty(t,r);return s&&n&&S(t,"delete",r,void 0),s}has(t,r){const n=Reflect.has(t,r);return(!G(r)||!Ie.has(r))&&p(t,"has",r),n}ownKeys(t){return p(t,"iterate",_(t)?"length":y),Reflect.ownKeys(t)}}class ct extends Me{constructor(t=!1){super(!0,t)}set(t,r){return!0}deleteProperty(t,r){return!0}}const at=new it,lt=new ct,ne=e=>e,Y=e=>Reflect.getPrototypeOf(e);function k(e,t,r=!1,n=!1){e=e.__v_raw;const s=l(e),o=l(t);r||(O(t,o)&&p(s,"get",t),p(s,"get",o));const{has:c}=Y(s),i=n?ne:r?oe:se;if(c.call(s,t))return i(e.get(t));if(c.call(s,o))return i(e.get(o));e!==s&&e.get(t)}function H(e,t=!1){const r=this.__v_raw,n=l(r),s=l(e);return t||(O(e,s)&&p(n,"has",e),p(n,"has",s)),e===s?r.has(e):r.has(e)||r.has(s)}function K(e,t=!1){return e=e.__v_raw,!t&&p(l(e),"iterate",y),Reflect.get(e,"size",e)}function pe(e){e=l(e);const t=l(this);return Y(t).has.call(t,e)||(t.add(e),S(t,"add",e,e)),this}function ge(e,t){t=l(t);const r=l(this),{has:n,get:s}=Y(r);let o=n.call(r,e);o||(e=l(e),o=n.call(r,e));const c=s.call(r,e);return r.set(e,t),o?O(t,c)&&S(r,"set",e,t):S(r,"add",e,t),this}function we(e){const t=l(this),{has:r,get:n}=Y(t);let s=r.call(t,e);s||(e=l(e),s=r.call(t,e)),n&&n.call(t,e);const o=t.delete(e);return s&&S(t,"delete",e,void 0),o}function be(){const e=l(this),t=e.size!==0,r=e.clear();return t&&S(e,"clear",void 0,void 0),r}function j(e,t){return function(n,s){const o=this,c=o.__v_raw,i=l(c),a=t?ne:e?oe:se;return!e&&p(i,"iterate",y),c.forEach((u,f)=>n.call(s,a(u),a(f),o))}}function D(e,t,r){return function(...n){const s=this.__v_raw,o=l(s),c=W(o),i=e==="entries"||e===Symbol.iterator&&c,a=e==="keys"&&c,u=s[e](...n),f=r?ne:t?oe:se;return!t&&p(o,"iterate",a?Q:y),{next(){const{value:d,done:w}=u.next();return w?{value:d,done:w}:{value:i?[f(d[0]),f(d[1])]:f(d),done:w}},[Symbol.iterator](){return this}}}}function E(e){return function(...t){return e==="delete"?!1:e==="clear"?void 0:this}}function ut(){const e={get(o){return k(this,o)},get size(){return K(this)},has:H,add:pe,set:ge,delete:we,clear:be,forEach:j(!1,!1)},t={get(o){return k(this,o,!1,!0)},get size(){return K(this)},has:H,add:pe,set:ge,delete:we,clear:be,forEach:j(!1,!0)},r={get(o){return k(this,o,!0)},get size(){return K(this,!0)},has(o){return H.call(this,o,!0)},add:E("add"),set:E("set"),delete:E("delete"),clear:E("clear"),forEach:j(!0,!1)},n={get(o){return k(this,o,!0,!0)},get size(){return K(this,!0)},has(o){return H.call(this,o,!0)},add:E("add"),set:E("set"),delete:E("delete"),clear:E("clear"),forEach:j(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(o=>{e[o]=D(o,!1,!1),r[o]=D(o,!0,!1),t[o]=D(o,!1,!0),n[o]=D(o,!0,!0)}),[e,r,t,n]}const[ft,ht,dt,pt]=ut();function Oe(e,t){const r=t?e?pt:dt:e?ht:ft;return(n,s,o)=>s==="__v_isReactive"?!e:s==="__v_isReadonly"?e:s==="__v_raw"?n:Reflect.get(U(r,s)&&s in n?r:n,s,o)}const gt={get:Oe(!1,!1)},wt={get:Oe(!0,!1)},Ae=new WeakMap,bt=new WeakMap,Ne=new WeakMap,mt=new WeakMap;function _t(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Et(e){return e.__v_skip||!Object.isExtensible(e)?0:_t($e(e))}function $(e){return z(e)?e:Ce(e,!1,at,gt,Ae)}function Pe(e){return Ce(e,!0,lt,wt,Ne)}function Ce(e,t,r,n,s){if(!N(e)||e.__v_raw&&!(t&&e.__v_isReactive))return e;const o=s.get(e);if(o)return o;const c=Et(e);if(c===0)return e;const i=new Proxy(e,c===2?n:r);return s.set(e,i),i}function F(e){return z(e)?F(e.__v_raw):!!(e&&e.__v_isReactive)}function z(e){return!!(e&&e.__v_isReadonly)}function qe(e){return!!(e&&e.__v_isShallow)}function l(e){const t=e&&e.__v_raw;return t?l(t):e}const se=e=>N(e)?$(e):e,oe=e=>N(e)?Pe(e):e;function T(e){return!!(e&&e.__v_isRef===!0)}function V(e,t,r){let n;try{n=r?e(...r):e()}catch(s){Le(s,t)}return n}function Z(e,t,r){if(M(e)){const s=V(e,t,r);return s&&Ge(s)&&s.catch(o=>{Le(o,t)}),s}const n=[];for(let s=0;s<e.length;s++)n.push(Z(e[s],t,r));return n}function Le(e,t){console.error(new Error(` + "`" + `[@vue-reactivity/watch]: ${t}` + "`" + `)),console.error(e)}function St(e){console.warn(vt(e))}function vt(e){return new Error(` + "`" + `[reactivue]: ${e}` + "`" + `)}var me={};function ke(e,t,r){return Tt(e,t,r)}function Tt(e,t,{immediate:r,deep:n,flush:s}={}){let o,c=!1,i=!1;if(T(e)?(o=()=>e.value,c=qe(e)):F(e)?(o=()=>e,n=!0):_(e)?(i=!0,c=e.some(F),o=()=>e.map(h=>T(h)?h.value:F(h)?I(h):M(h)?V(h,"watch getter"):St("invalid source"))):M(e)?t?o=()=>V(e,"watch getter"):o=()=>(a&&a(),Z(e,"watch callback",[u])):o=Ue,t&&n){const h=o;o=()=>I(h())}let a,u=h=>{a=b.onStop=()=>{V(h,"watch cleanup")}},f=i?[]:me;const d=()=>{if(b.active)if(t){const h=b.run();(n||c||(i?h.some((q,L)=>O(q,f[L])):O(h,f)))&&(a&&a(),Z(t,"watch value",[h,f===me?void 0:f,u]),f=h)}else b.run()};d.allowRecurse=!!t;let w;s==="sync"?w=d:w=()=>{d()};const b=new Ze(o,w);return t?r?d():f=b.run():b.run(),()=>b.stop()}function I(e,t=new Set){if(!N(e)||t.has(e))return e;if(t.add(e),_(e))for(let r=0;r<e.length;r++)I(e[r],t);else if(e instanceof Map)e.forEach((r,n)=>{I(e.get(n),t)});else if(e instanceof Set)e.forEach(r=>{I(r,t)});else for(const r of Object.keys(e))I(e[r],t);return e}let ee="";const g=$({state:"loading",contexts:[],sseSources:[]}),He={contexts:[]};ke(()=>g.contexts,(e,t)=>{if(g.state==="interactive"||g.state==="complete")for(const r of e){if(t.includes(r))continue;const n=document.querySelector(r.sourceSelector);n&&n.dispatchEvent(new CustomEvent("kilo:load"))}});const yt=new MutationObserver(e=>{for(const t of e)for(const r of t.removedNodes){if(r.nodeType!==Node.ELEMENT_NODE)continue;const n=r;for(const s of He.contexts)if(s.bindings){for(const o in s.bindings)if(s.bindings[o].element===n){for(const i of s.bindings[o].events)s.bindings[o].element.removeEventListener("change",s.bindings[o].handler);je(s)(o,s.bindings[o].selector)}}}});document.addEventListener("readystatechange",e=>{if(g.state=document.readyState,document.readyState==="interactive"||g.state==="complete"){yt.observe(document.body,{childList:!0,subtree:!0});for(const t of g.contexts){const r=document.querySelector(t.sourceSelector);r&&r.dispatchEvent(new CustomEvent("kilo:load"))}for(const t of g.sseSources)t.handler&&t.source.addEventListener("message",t.handler)}});function Rt(e){return t=>{try{const r=t;if(e.isPaused){e.queue.push(r);return}const n=JSON.parse(r.data),s=document.querySelector(n["x-kilo-target"]),o=n["x-kilo-swap"],c=n["x-kilo-markup"];if(!s)throw new Error("Target element not found");ie({sourceSelector:n["x-kilo-target"],targetSelector:n["x-kilo-target"],triggerEvent:null,trigger:async()=>{},actor:null,swapper:null,beforeActor:null,afterActor:null},o,c)}catch(r){console.error(r),console.error(t)}}}async function ie(e,t,r){var f,d,w,b,h,q;const n=document.querySelector(e.sourceSelector);if(!n)throw new Error("source element not found");let s=n;if(e.targetSelector&&(s=document.querySelector(e.targetSelector),!s))throw new Error("target element not found");const o=t.split(" "),c=o[0],i=o.length>1?o[1]:"",a=document.createRange();a.selectNode(s);const u=a.createContextualFragment(r);switch(c){case"innerHTML":for(;s.firstChild;)s.removeChild(s.firstChild);s.appendChild(u);break;case"outerHTML":(f=s.parentNode)==null||f.replaceChild(u,s);break;case"beforebegin":(d=s.parentNode)==null||d.insertBefore(u,s);break;case"afterbegin":s.insertBefore(u,s.firstChild);break;case"beforeend":s.appendChild(u);break;case"afterend":(w=s.parentNode)==null||w.insertBefore(u,s.nextSibling);break}if(i){const L=i.split(":"),We=L[0],Fe=L[1];switch(We){case"scroll":switch(Fe){case"view":(b=u.firstChild)==null||b.scrollIntoView();break;case"lastchild":(h=s.lastChild)==null||h.scrollIntoView({block:"end",behavior:"instant"});break;case"nextsibling":(q=s.nextSibling)==null||q.scrollIntoView({block:"end",behavior:"instant"});break}break}}}function It(e,t){const r=new FormData(e);switch(t.method){case"GET":t.url=t.url+"?"+new URLSearchParams(r).toString();break;case"POST":t.body=r;break}}async function _e(e,t,r){const n=document.querySelector(e.sourceSelector);if(!n)throw new Error("source element not found");const s=typeof t=="string"?t:t(e);new FormData;const o={url:ee+s,contentType:"",cancel:!1,method:r};if(n.tagName==="FORM"&&It(n,o),e.beforeActor&&(await e.beforeActor(o),o.cancel))return;const c=await fetch(o.url,o);if(e.afterActor&&!await e.afterActor(c))return;if(e.swapper)return e.swapper(c);const i=await c.text();return ie(e,"innerHTML",i)}function Ee(e){return{swap:t=>(e.swapper=async r=>{const n=await r.text();return ie(e,t,n)},{...ce(e)}),...C(e)}}function B(e){return{target:t=>(e.targetSelector=t,Ee(e)),before:t=>(e.beforeActor=t,B(e)),after:t=>(e.afterActor=t,B(e)),...Ee(e),...C(e)}}function C(e){return{retrigger:()=>{if(!e.actor)throw new Error("No actor available");e.actor(null)}}}function ce(e){const t=document.querySelector(e.sourceSelector);if(!t)throw new Error("source element not found");if(!e.triggerEvent)switch(t.tagName){case"BUTTON":e.triggerEvent="click";break;case"FORM":e.triggerEvent="submit";break;default:e.triggerEvent="kilo:load";break}return t.addEventListener(e.triggerEvent,e.trigger),{get:r=>(e.actor=async n=>{n==null||n.preventDefault(),_e(e,r,"GET")},{...B(e),...C(e)}),post:r=>(e.actor=async n=>{n==null||n.preventDefault(),_e(e,r,"POST")},{...B(e),...C(e)}),...C(e)}}function Mt(e){return{on:t=>(e.triggerEvent=t,ce(e))}}function te(e){return{pause:t=>{if(e.isPaused=t,!e.handler)return te(e);if(!e.isPaused){for(;e.queue.length>0;){const r=e.queue.shift();r&&e.handler(r)}e.queue=[]}return te(e)},clear:()=>{e.queue=[]},close:()=>{e.source.close(),g.sseSources=g.sseSources.filter(t=>t!==e)}}}function Ke(){return{baseUrl:e=>(ee=e,{...Ke()}),sse:(e,t)=>{const r={withCredentials:!0,...t},n={source:new EventSource(ee+e,r),isPaused:!1,handler:void 0,queue:[]};return n.handler=Rt(n),g.sseSources.push(n),te(n)}}}function je(e){return(t,r)=>{const n=document.querySelector(r);if(!n)throw new Error("Element not found");const s=c=>{const i=c.target;switch(i.tagName){case"INPUT":const a=i;switch(a.type){case"checkbox":e.state[t]=a.checked;break;default:e.state[t]=a.value;break}break;case"SELECT":e.state[t]=i.value;break;case"TEXTAREA":e.state[t]=i.value;break}},o={field:t,selector:r,events:[],element:n,handler:s};switch(o.events.push("change"),e.bindings[t]=o,n.tagName){case"INPUT":switch(n.type){case"text":o.events.push("keyup");break}break;case"SELECT":o.events.push("select");break;case"TEXTAREA":o.events.push("keyup");break}for(const c of o.events)n.addEventListener(c,s);return{...ae(e)}}}function ae(e){return{model:e.state,watch:(t,r)=>(ke(()=>e.state[t],async(n,s)=>{await r(n,s)}),{...ae(e)}),bind:je(e)}}function X(e){if(!document.querySelector(e))throw new Error("source element not founf");const r={sourceSelector:e,targetSelector:null,trigger:async n=>{if(!r.actor)throw new Error("No event handler specified");r.actor(n)},triggerEvent:null,actor:null,swapper:null,beforeActor:null,afterActor:null};return g.contexts.push(r),{...Mt(r),...ce(r)}}function Ot(e){const t={state:$(e),bindings:{}};return He.contexts.push(t),{...ae(t)}}function De(){return Ke()}De().baseUrl("http://localhost:4001");const le=De().sse("/sse?stream=events",{withCredentials:!1}),A=Ot({searchText:"",runId:0,isShowingSearchResults:!1}).bind("searchText","#search-input").bind("runId","#search-select"),At=X("#search-select").get("/components/search-select").swap("outerHTML"),Nt=X("#log-output-inner").get("/actions/search").swap("innerHTML scroll:lastchild"),Pt=X("#search-form").get("/actions/search").before(()=>{A.model.isShowingSearchResults=!0}).target("#log-output-inner");A.watch("searchText",e=>{const t=e.length>0;t||(A.model.isShowingSearchResults=!1),le.pause(t);const r=document.querySelector(".blinking-cursor");r&&(r.style.visibility=t?"hidden":"visible")});A.watch("isShowingSearchResults",e=>{e||(le.clear(),At.retrigger(),Nt.retrigger())});A.watch("runId",e=>{const r=document.querySelector("#search-select").getAttribute("data-current-run-id"),n=e!=r;le.pause(n),n&&A.model.searchText.length>0&&Pt.retrigger();const s=document.querySelector(".blinking-cursor");s&&(s.style.visibility=n?"hidden":"visible")});X("#restart").post("/actions/restart").swap("none");
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
`)

var stylesheet = []byte(`*,:before,:after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}:before,:after{--tw-content: ""}html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}:root,[data-theme]{background-color:hsl(var(--b1) / var(--tw-bg-opacity, 1));color:hsl(var(--bc) / var(--tw-text-opacity, 1))}html{-webkit-tap-highlight-color:transparent}:root{color-scheme:light;--pf: 259 94% 44%;--sf: 314 100% 40%;--af: 174 75% 39%;--nf: 214 20% 14%;--in: 198 93% 60%;--su: 158 64% 52%;--wa: 43 96% 56%;--er: 0 91% 71%;--inc: 198 100% 12%;--suc: 158 100% 10%;--wac: 43 100% 11%;--erc: 0 100% 14%;--rounded-box: 1rem;--rounded-btn: .5rem;--rounded-badge: 1.9rem;--animation-btn: .25s;--animation-input: .2s;--btn-text-case: uppercase;--btn-focus-scale: .95;--border-btn: 1px;--tab-border: 1px;--tab-radius: .5rem;--p: 259 94% 51%;--pc: 259 96% 91%;--s: 314 100% 47%;--sc: 314 100% 91%;--a: 174 75% 46%;--ac: 174 75% 11%;--n: 214 20% 21%;--nc: 212 19% 87%;--b1: 0 0% 100%;--b2: 0 0% 95%;--b3: 180 2% 90%;--bc: 215 28% 17%}@media (prefers-color-scheme: dark){:root{color-scheme:dark;--pf: 262 80% 43%;--sf: 316 70% 43%;--af: 175 70% 34%;--in: 198 93% 60%;--su: 158 64% 52%;--wa: 43 96% 56%;--er: 0 91% 71%;--inc: 198 100% 12%;--suc: 158 100% 10%;--wac: 43 100% 11%;--erc: 0 100% 14%;--rounded-box: 1rem;--rounded-btn: .5rem;--rounded-badge: 1.9rem;--animation-btn: .25s;--animation-input: .2s;--btn-text-case: uppercase;--btn-focus-scale: .95;--border-btn: 1px;--tab-border: 1px;--tab-radius: .5rem;--p: 262 80% 50%;--pc: 0 0% 100%;--s: 316 70% 50%;--sc: 0 0% 100%;--a: 175 70% 41%;--ac: 0 0% 100%;--n: 213 18% 20%;--nf: 212 17% 17%;--nc: 220 13% 69%;--b1: 212 18% 14%;--b2: 213 18% 12%;--b3: 213 18% 10%;--bc: 220 13% 69%}}[data-theme=light]{color-scheme:light;--pf: 259 94% 44%;--sf: 314 100% 40%;--af: 174 75% 39%;--nf: 214 20% 14%;--in: 198 93% 60%;--su: 158 64% 52%;--wa: 43 96% 56%;--er: 0 91% 71%;--inc: 198 100% 12%;--suc: 158 100% 10%;--wac: 43 100% 11%;--erc: 0 100% 14%;--rounded-box: 1rem;--rounded-btn: .5rem;--rounded-badge: 1.9rem;--animation-btn: .25s;--animation-input: .2s;--btn-text-case: uppercase;--btn-focus-scale: .95;--border-btn: 1px;--tab-border: 1px;--tab-radius: .5rem;--p: 259 94% 51%;--pc: 259 96% 91%;--s: 314 100% 47%;--sc: 314 100% 91%;--a: 174 75% 46%;--ac: 174 75% 11%;--n: 214 20% 21%;--nc: 212 19% 87%;--b1: 0 0% 100%;--b2: 0 0% 95%;--b3: 180 2% 90%;--bc: 215 28% 17%}[data-theme=dark]{color-scheme:dark;--pf: 262 80% 43%;--sf: 316 70% 43%;--af: 175 70% 34%;--in: 198 93% 60%;--su: 158 64% 52%;--wa: 43 96% 56%;--er: 0 91% 71%;--inc: 198 100% 12%;--suc: 158 100% 10%;--wac: 43 100% 11%;--erc: 0 100% 14%;--rounded-box: 1rem;--rounded-btn: .5rem;--rounded-badge: 1.9rem;--animation-btn: .25s;--animation-input: .2s;--btn-text-case: uppercase;--btn-focus-scale: .95;--border-btn: 1px;--tab-border: 1px;--tab-radius: .5rem;--p: 262 80% 50%;--pc: 0 0% 100%;--s: 316 70% 50%;--sc: 0 0% 100%;--a: 175 70% 41%;--ac: 0 0% 100%;--n: 213 18% 20%;--nf: 212 17% 17%;--nc: 220 13% 69%;--b1: 212 18% 14%;--b2: 213 18% 12%;--b3: 213 18% 10%;--bc: 220 13% 69%}*,:before,:after{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.avatar.placeholder>div{display:flex;align-items:center;justify-content:center}@media (hover:hover){.label a:hover{--tw-text-opacity: 1;color:hsl(var(--bc) / var(--tw-text-opacity))}}.btn{display:inline-flex;flex-shrink:0;cursor:pointer;-webkit-user-select:none;user-select:none;flex-wrap:wrap;align-items:center;justify-content:center;border-color:transparent;border-color:hsl(var(--b2) / var(--tw-border-opacity));text-align:center;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-timing-function:cubic-bezier(0,0,.2,1);transition-duration:.2s;border-radius:var(--rounded-btn, .5rem);height:3rem;padding-left:1rem;padding-right:1rem;min-height:3rem;font-size:.875rem;line-height:1em;gap:.5rem;font-weight:600;text-decoration-line:none;border-width:var(--border-btn, 1px);animation:button-pop var(--animation-btn, .25s) ease-out;text-transform:var(--btn-text-case, uppercase);--tw-border-opacity: 1;--tw-bg-opacity: 1;background-color:hsl(var(--b2) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--bc) / var(--tw-text-opacity));outline-color:hsl(var(--bc) / 1)}.btn-disabled,.btn[disabled],.btn:disabled{pointer-events:none}.btn-group>input[type=radio].btn{-webkit-appearance:none;-moz-appearance:none;appearance:none}.btn-group>input[type=radio].btn:before{content:attr(data-title)}.btn:is(input[type=checkbox]),.btn:is(input[type=radio]){width:auto;-webkit-appearance:none;-moz-appearance:none;appearance:none}.btn:is(input[type=checkbox]):after,.btn:is(input[type=radio]):after{--tw-content: attr(aria-label);content:var(--tw-content)}@media (hover: hover){.btn:hover{--tw-border-opacity: 1;border-color:hsl(var(--b3) / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:hsl(var(--b3) / var(--tw-bg-opacity))}.btn-primary:hover{--tw-border-opacity: 1;border-color:hsl(var(--pf) / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:hsl(var(--pf) / var(--tw-bg-opacity))}.btn-secondary:hover{--tw-border-opacity: 1;border-color:hsl(var(--sf) / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:hsl(var(--sf) / var(--tw-bg-opacity))}.btn.glass:hover{--glass-opacity: 25%;--glass-border-opacity: 15%}.btn-outline.btn-primary:hover{--tw-border-opacity: 1;border-color:hsl(var(--pf) / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:hsl(var(--pf) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--pc) / var(--tw-text-opacity))}.btn-outline.btn-secondary:hover{--tw-border-opacity: 1;border-color:hsl(var(--sf) / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:hsl(var(--sf) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--sc) / var(--tw-text-opacity))}.btn-disabled:hover,.btn[disabled]:hover,.btn:disabled:hover{--tw-border-opacity: 0;background-color:hsl(var(--n) / var(--tw-bg-opacity));--tw-bg-opacity: .2;color:hsl(var(--bc) / var(--tw-text-opacity));--tw-text-opacity: .2}.btn:is(input[type=checkbox]:checked):hover,.btn:is(input[type=radio]:checked):hover{--tw-border-opacity: 1;border-color:hsl(var(--pf) / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:hsl(var(--pf) / var(--tw-bg-opacity))}}.label{display:flex;-webkit-user-select:none;user-select:none;align-items:center;justify-content:space-between;padding:.5rem .25rem}.input{flex-shrink:1;height:3rem;padding-left:1rem;padding-right:1rem;font-size:1rem;line-height:2;line-height:1.5rem;border-width:1px;border-color:hsl(var(--bc) / var(--tw-border-opacity));--tw-border-opacity: 0;--tw-bg-opacity: 1;background-color:hsl(var(--b1) / var(--tw-bg-opacity));border-radius:var(--rounded-btn, .5rem)}.input-group>.input{isolation:isolate}.input-group>*,.input-group>.input,.input-group>.textarea,.input-group>.select{border-radius:0}.link{cursor:pointer;text-decoration-line:underline}.range{height:1.5rem;width:100%;cursor:pointer;-moz-appearance:none;appearance:none;-webkit-appearance:none;--range-shdw: var(--bc);overflow:hidden;background-color:transparent;border-radius:var(--rounded-box, 1rem)}.range:focus{outline:none}.select{display:inline-flex;cursor:pointer;-webkit-user-select:none;user-select:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;height:3rem;padding-left:1rem;padding-right:2.5rem;font-size:.875rem;line-height:1.25rem;line-height:2;min-height:3rem;border-width:1px;border-color:hsl(var(--bc) / var(--tw-border-opacity));--tw-border-opacity: 0;--tw-bg-opacity: 1;background-color:hsl(var(--b1) / var(--tw-bg-opacity));border-radius:var(--rounded-btn, .5rem);background-image:linear-gradient(45deg,transparent 50%,currentColor 50%),linear-gradient(135deg,currentColor 50%,transparent 50%);background-position:calc(100% - 20px) calc(1px + 50%),calc(100% - 16.1px) calc(1px + 50%);background-size:4px 4px,4px 4px;background-repeat:no-repeat}.select[multiple]{height:auto}.steps{display:inline-grid;grid-auto-flow:column;overflow:hidden;overflow-x:auto;counter-reset:step;grid-auto-columns:1fr}.steps .step{display:grid;grid-template-columns:repeat(1,minmax(0,1fr));grid-template-columns:auto;grid-template-rows:repeat(2,minmax(0,1fr));grid-template-rows:40px 1fr;place-items:center;text-align:center;min-width:4rem}.swap{position:relative;display:inline-grid;-webkit-user-select:none;user-select:none;place-content:center;cursor:pointer}.swap>*{grid-column-start:1;grid-row-start:1;transition-duration:.3s;transition-timing-function:cubic-bezier(0,0,.2,1);transition-property:transform,opacity}.swap input{-webkit-appearance:none;-moz-appearance:none;appearance:none}.swap .swap-on,.swap .swap-indeterminate,.swap input:indeterminate~.swap-on{opacity:0}.swap input:checked~.swap-off,.swap-active .swap-off,.swap input:indeterminate~.swap-off{opacity:0}.swap input:checked~.swap-on,.swap-active .swap-on,.swap input:indeterminate~.swap-indeterminate{opacity:1}.btm-nav>* .label{font-size:1rem;line-height:1.5rem}.btn:active:hover,.btn:active:focus{animation:button-pop 0s ease-out;transform:scale(var(--btn-focus-scale, .97))}.btn:focus-visible{outline-style:solid;outline-width:2px;outline-offset:2px}.btn-primary{--tw-border-opacity: 1;border-color:hsl(var(--p) / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:hsl(var(--p) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--pc) / var(--tw-text-opacity));outline-color:hsl(var(--p) / 1)}.btn-primary.btn-active{--tw-border-opacity: 1;border-color:hsl(var(--pf) / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:hsl(var(--pf) / var(--tw-bg-opacity))}.btn-secondary{--tw-border-opacity: 1;border-color:hsl(var(--s) / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:hsl(var(--s) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--sc) / var(--tw-text-opacity));outline-color:hsl(var(--s) / 1)}.btn-secondary.btn-active{--tw-border-opacity: 1;border-color:hsl(var(--sf) / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:hsl(var(--sf) / var(--tw-bg-opacity))}.btn.glass{--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow);outline-color:currentColor}.btn.glass.btn-active{--glass-opacity: 25%;--glass-border-opacity: 15%}.btn-outline.btn-primary{--tw-text-opacity: 1;color:hsl(var(--p) / var(--tw-text-opacity))}.btn-outline.btn-primary.btn-active{--tw-border-opacity: 1;border-color:hsl(var(--pf) / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:hsl(var(--pf) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--pc) / var(--tw-text-opacity))}.btn-outline.btn-secondary{--tw-text-opacity: 1;color:hsl(var(--s) / var(--tw-text-opacity))}.btn-outline.btn-secondary.btn-active{--tw-border-opacity: 1;border-color:hsl(var(--sf) / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:hsl(var(--sf) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--sc) / var(--tw-text-opacity))}.btn.btn-disabled,.btn[disabled],.btn:disabled{--tw-border-opacity: 0;background-color:hsl(var(--n) / var(--tw-bg-opacity));--tw-bg-opacity: .2;color:hsl(var(--bc) / var(--tw-text-opacity));--tw-text-opacity: .2}.btn-group>input[type=radio]:checked.btn,.btn-group>.btn-active{--tw-border-opacity: 1;border-color:hsl(var(--p) / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:hsl(var(--p) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--pc) / var(--tw-text-opacity))}.btn-group>input[type=radio]:checked.btn:focus-visible,.btn-group>.btn-active:focus-visible{outline-style:solid;outline-width:2px;outline-color:hsl(var(--p) / 1)}.btn:is(input[type=checkbox]:checked),.btn:is(input[type=radio]:checked){--tw-border-opacity: 1;border-color:hsl(var(--p) / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:hsl(var(--p) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--pc) / var(--tw-text-opacity))}.btn:is(input[type=checkbox]:checked):focus-visible,.btn:is(input[type=radio]:checked):focus-visible{outline-color:hsl(var(--p) / 1)}@keyframes button-pop{0%{transform:scale(var(--btn-focus-scale, .98))}40%{transform:scale(1.02)}to{transform:scale(1)}}@keyframes checkmark{0%{background-position-y:5px}50%{background-position-y:-2px}to{background-position-y:0}}.input input:focus{outline:2px solid transparent;outline-offset:2px}.input[list]::-webkit-calendar-picker-indicator{line-height:1em}.input-bordered{--tw-border-opacity: .2}.input:focus,.input:focus-within{outline-style:solid;outline-width:2px;outline-offset:2px;outline-color:hsl(var(--bc) / .2)}.input-disabled,.input:disabled,.input[disabled]{cursor:not-allowed;--tw-border-opacity: 1;border-color:hsl(var(--b2) / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:hsl(var(--b2) / var(--tw-bg-opacity));--tw-text-opacity: .2}.input-disabled::placeholder,.input:disabled::placeholder,.input[disabled]::placeholder{color:hsl(var(--bc) / var(--tw-placeholder-opacity));--tw-placeholder-opacity: .2}.link:focus{outline:2px solid transparent;outline-offset:2px}.link:focus-visible{outline:2px solid currentColor;outline-offset:2px}.mockup-phone .display{overflow:hidden;border-radius:40px;margin-top:-25px}.mockup-browser .mockup-browser-toolbar .input{position:relative;margin-left:auto;margin-right:auto;display:block;height:1.75rem;width:24rem;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;--tw-bg-opacity: 1;background-color:hsl(var(--b2) / var(--tw-bg-opacity));padding-left:2rem}.mockup-browser .mockup-browser-toolbar .input:before{content:"";position:absolute;left:.5rem;top:50%;aspect-ratio:1 / 1;height:.75rem;--tw-translate-y: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));border-radius:9999px;border-width:2px;border-color:currentColor;opacity:.6}.mockup-browser .mockup-browser-toolbar .input:after{content:"";position:absolute;left:1.25rem;top:50%;height:.5rem;--tw-translate-y: 25%;--tw-rotate: -45deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));border-radius:9999px;border-width:1px;border-color:currentColor;opacity:.6}@keyframes modal-pop{0%{opacity:0}}@keyframes progress-loading{50%{background-position-x:-115%}}@keyframes radiomark{0%{box-shadow:0 0 0 12px hsl(var(--b1)) inset,0 0 0 12px hsl(var(--b1)) inset}50%{box-shadow:0 0 0 3px hsl(var(--b1)) inset,0 0 0 3px hsl(var(--b1)) inset}to{box-shadow:0 0 0 4px hsl(var(--b1)) inset,0 0 0 4px hsl(var(--b1)) inset}}.range:focus-visible::-webkit-slider-thumb{--focus-shadow: 0 0 0 6px hsl(var(--b1)) inset, 0 0 0 2rem hsl(var(--range-shdw)) inset}.range:focus-visible::-moz-range-thumb{--focus-shadow: 0 0 0 6px hsl(var(--b1)) inset, 0 0 0 2rem hsl(var(--range-shdw)) inset}.range::-webkit-slider-runnable-track{height:.5rem;width:100%;background-color:hsl(var(--bc) / .1);border-radius:var(--rounded-box, 1rem)}.range::-moz-range-track{height:.5rem;width:100%;background-color:hsl(var(--bc) / .1);border-radius:var(--rounded-box, 1rem)}.range::-webkit-slider-thumb{position:relative;height:1.5rem;width:1.5rem;border-style:none;--tw-bg-opacity: 1;background-color:hsl(var(--b1) / var(--tw-bg-opacity));border-radius:var(--rounded-box, 1rem);-moz-appearance:none;appearance:none;-webkit-appearance:none;top:50%;color:hsl(var(--range-shdw));transform:translateY(-50%);--filler-size: 100rem;--filler-offset: .6rem;box-shadow:0 0 0 3px hsl(var(--range-shdw)) inset,var(--focus-shadow, 0 0),calc(var(--filler-size) * -1 - var(--filler-offset)) 0 0 var(--filler-size)}.range::-moz-range-thumb{position:relative;height:1.5rem;width:1.5rem;border-style:none;--tw-bg-opacity: 1;background-color:hsl(var(--b1) / var(--tw-bg-opacity));border-radius:var(--rounded-box, 1rem);top:50%;color:hsl(var(--range-shdw));--filler-size: 100rem;--filler-offset: .5rem;box-shadow:0 0 0 3px hsl(var(--range-shdw)) inset,var(--focus-shadow, 0 0),calc(var(--filler-size) * -1 - var(--filler-offset)) 0 0 var(--filler-size)}@keyframes rating-pop{0%{transform:translateY(-.125em)}40%{transform:translateY(-.125em)}to{transform:translateY(0)}}.select-bordered{--tw-border-opacity: .2}.select:focus{outline-style:solid;outline-width:2px;outline-offset:2px;outline-color:hsl(var(--bc) / .2)}.select-disabled,.select:disabled,.select[disabled]{cursor:not-allowed;--tw-border-opacity: 1;border-color:hsl(var(--b2) / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:hsl(var(--b2) / var(--tw-bg-opacity));--tw-text-opacity: .2}.select-disabled::placeholder,.select:disabled::placeholder,.select[disabled]::placeholder{color:hsl(var(--bc) / var(--tw-placeholder-opacity));--tw-placeholder-opacity: .2}.select-multiple,.select[multiple],.select[size].select:not([size="1"]){background-image:none;padding-right:1rem}[dir=rtl] .select{background-position:calc(0% + 12px) calc(1px + 50%),calc(0% + 16px) calc(1px + 50%)}.steps .step:before{top:0;grid-column-start:1;grid-row-start:1;height:.5rem;width:100%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-bg-opacity: 1;background-color:hsl(var(--b3) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--bc) / var(--tw-text-opacity));content:"";margin-left:-100%}.steps .step:after{content:counter(step);counter-increment:step;z-index:1;position:relative;grid-column-start:1;grid-row-start:1;display:grid;height:2rem;width:2rem;place-items:center;place-self:center;border-radius:9999px;--tw-bg-opacity: 1;background-color:hsl(var(--b3) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--bc) / var(--tw-text-opacity))}.steps .step:first-child:before{content:none}.steps .step[data-content]:after{content:attr(data-content)}.steps .step-neutral+.step-neutral:before,.steps .step-neutral:after{--tw-bg-opacity: 1;background-color:hsl(var(--n) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--nc) / var(--tw-text-opacity))}.steps .step-primary+.step-primary:before,.steps .step-primary:after{--tw-bg-opacity: 1;background-color:hsl(var(--p) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--pc) / var(--tw-text-opacity))}.steps .step-secondary+.step-secondary:before,.steps .step-secondary:after{--tw-bg-opacity: 1;background-color:hsl(var(--s) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--sc) / var(--tw-text-opacity))}.steps .step-accent+.step-accent:before,.steps .step-accent:after{--tw-bg-opacity: 1;background-color:hsl(var(--a) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--ac) / var(--tw-text-opacity))}.steps .step-info+.step-info:before{--tw-bg-opacity: 1;background-color:hsl(var(--in) / var(--tw-bg-opacity))}.steps .step-info:after{--tw-bg-opacity: 1;background-color:hsl(var(--in) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--inc) / var(--tw-text-opacity))}.steps .step-success+.step-success:before{--tw-bg-opacity: 1;background-color:hsl(var(--su) / var(--tw-bg-opacity))}.steps .step-success:after{--tw-bg-opacity: 1;background-color:hsl(var(--su) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--suc) / var(--tw-text-opacity))}.steps .step-warning+.step-warning:before{--tw-bg-opacity: 1;background-color:hsl(var(--wa) / var(--tw-bg-opacity))}.steps .step-warning:after{--tw-bg-opacity: 1;background-color:hsl(var(--wa) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--wac) / var(--tw-text-opacity))}.steps .step-error+.step-error:before{--tw-bg-opacity: 1;background-color:hsl(var(--er) / var(--tw-bg-opacity))}.steps .step-error:after{--tw-bg-opacity: 1;background-color:hsl(var(--er) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--erc) / var(--tw-text-opacity))}@keyframes toast-pop{0%{transform:scale(.9);opacity:0}to{transform:scale(1);opacity:1}}.btn-sm{height:2rem;padding-left:.75rem;padding-right:.75rem;min-height:2rem;font-size:.875rem}.btn-square:where(.btn-sm){height:2rem;width:2rem;padding:0}.btn-circle:where(.btn-sm){height:2rem;width:2rem;border-radius:9999px;padding:0}.input-sm{height:2rem;padding-left:.75rem;padding-right:.75rem;font-size:.875rem;line-height:2rem}.select-sm{height:2rem;padding-left:.75rem;padding-right:2rem;font-size:.875rem;line-height:2rem;min-height:2rem}[dir=rtl] .select-sm{padding-left:2rem;padding-right:.75rem}.btn-group .btn:not(:first-child):not(:last-child){border-radius:0}.btn-group .btn:first-child:not(:last-child){margin-left:-1px;margin-top:-0px;border-top-left-radius:var(--rounded-btn, .5rem);border-top-right-radius:0;border-bottom-left-radius:var(--rounded-btn, .5rem);border-bottom-right-radius:0}.btn-group .btn:last-child:not(:first-child){border-top-left-radius:0;border-top-right-radius:var(--rounded-btn, .5rem);border-bottom-left-radius:0;border-bottom-right-radius:var(--rounded-btn, .5rem)}.btn-group-horizontal .btn:not(:first-child):not(:last-child){border-radius:0}.btn-group-horizontal .btn:first-child:not(:last-child){margin-left:-1px;margin-top:-0px;border-top-left-radius:var(--rounded-btn, .5rem);border-top-right-radius:0;border-bottom-left-radius:var(--rounded-btn, .5rem);border-bottom-right-radius:0}.btn-group-horizontal .btn:last-child:not(:first-child){border-top-left-radius:0;border-top-right-radius:var(--rounded-btn, .5rem);border-bottom-left-radius:0;border-bottom-right-radius:var(--rounded-btn, .5rem)}.btn-group-vertical .btn:first-child:not(:last-child){margin-left:-0px;margin-top:-1px;border-top-left-radius:var(--rounded-btn, .5rem);border-top-right-radius:var(--rounded-btn, .5rem);border-bottom-left-radius:0;border-bottom-right-radius:0}.btn-group-vertical .btn:last-child:not(:first-child){border-top-left-radius:0;border-top-right-radius:0;border-bottom-left-radius:var(--rounded-btn, .5rem);border-bottom-right-radius:var(--rounded-btn, .5rem)}.visible{visibility:visible}.m-4{margin:1rem}.mx-2{margin-left:.5rem;margin-right:.5rem}.mx-4{margin-left:1rem;margin-right:1rem}.my-2{margin-top:.5rem;margin-bottom:.5rem}.my-4{margin-top:1rem;margin-bottom:1rem}.my-8{margin-top:2rem;margin-bottom:2rem}.flex{display:flex}.hidden{display:none}.h-px{height:1px}.h-screen{height:100vh}.w-36{width:9rem}.w-48{width:12rem}.w-96{width:24rem}.shrink-0{flex-shrink:0}.grow{flex-grow:1}.grow-0{flex-grow:0}.flex-row{flex-direction:row}.flex-col{flex-direction:column}.items-center{align-items:center}.items-stretch{align-items:stretch}.justify-between{justify-content:space-between}.gap-2{gap:.5rem}.overflow-y-auto{overflow-y:auto}.overflow-y-scroll{overflow-y:scroll}.break-all{word-break:break-all}.rounded-lg{border-radius:.5rem}.border{border-width:1px}.border-0{border-width:0px}.border-solid{border-style:solid}.border-blue-400{--tw-border-opacity: 1;border-color:rgb(96 165 250 / var(--tw-border-opacity))}.bg-blue-500{--tw-bg-opacity: 1;background-color:rgb(59 130 246 / var(--tw-bg-opacity))}.bg-green-400{--tw-bg-opacity: 1;background-color:rgb(74 222 128 / var(--tw-bg-opacity))}.bg-slate-900{--tw-bg-opacity: 1;background-color:rgb(15 23 42 / var(--tw-bg-opacity))}.p-2{padding:.5rem}.p-4{padding:1rem}.px-4{padding-left:1rem;padding-right:1rem}.font-mono{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}.text-2xl{font-size:1.5rem;line-height:2rem}.text-green-400{--tw-text-opacity: 1;color:rgb(74 222 128 / var(--tw-text-opacity))}.text-slate-900{--tw-text-opacity: 1;color:rgb(15 23 42 / var(--tw-text-opacity))}.text-white{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity))}.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}:is(.dark .dark\:bg-green-700){--tw-bg-opacity: 1;background-color:rgb(21 128 61 / var(--tw-bg-opacity))}
`)
